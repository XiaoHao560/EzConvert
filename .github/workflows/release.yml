name: release
on:
  push:
    tags: [ 'v*' ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract tag info and find changelog
        id: changelog
        run: |
          TAG_NAME="${{ github.ref_name }}"
          echo "Current tag: $TAG_NAME"
          
          CHANGELOG_FILE="change_log/${TAG_NAME}.md"
          echo "Looking for changelog file: $CHANGELOG_FILE"
          
          if [ -f "$CHANGELOG_FILE" ]; then
            echo "Changelog file found"
            echo "changelog_exists=true" >> $GITHUB_OUTPUT
            
            CONTENT=$(cat "$CHANGELOG_FILE" | sed 's/\\/\\\\/g; s/"/\\"/g; s/$/\\n/' | tr -d '\n')
            echo "release_body=$CONTENT" >> $GITHUB_OUTPUT
          else
            echo "Warning: Changelog file $CHANGELOG_FILE not found"
            echo "changelog_exists=false" >> $GITHUB_OUTPUT
            echo "release_body=## $TAG_NAME\n\n> 自动构建版本，详情请查看项目文档。" >> $GITHUB_OUTPUT
          fi

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > xiaohao-app-key.keystore
        shell: bash

      - name: Build Signed Release APK
        run: ./gradlew assembleRelease
        env:
          KEYSTORE_FILE: ${{ github.workspace }}/xiaohao-app-key.keystore
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - uses: actions/setup-java@v4
        with: 
          distribution: temurin
          java-version: 17
      - uses: gradle/actions/setup-gradle@v4

      - name: Decide variant
        id: var
        run: |
          if [[ "${{ github.ref_name }}" == *"-alpha" ]] || [[ "${{ github.ref_name }}" == *"-debug" ]]; then
            echo "variant=debug" >> $GITHUB_OUTPUT
          else
            echo "variant=release" >> $GITHUB_OUTPUT
          fi

      - name: Build APK
        run: ./gradlew assemble${{ steps.var.outputs.variant }}

      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          files: app/build/outputs/apk/${{ steps.var.outputs.variant }}/*.apk
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ${{ steps.changelog.outputs.release_body }}
          prerelease: ${{ contains(github.ref_name,'alpha') || contains(github.ref_name,'beta') }}
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}